{"version":3,"file":"react-currency-input.cjs.js","sources":["../src/object-assign-polyfill.js","../src/mask.js","../src/index.js"],"sourcesContent":["Object.assign = Object.assign ||\r\n  function(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n","\r\nexport default function mask(value, precision = 2, decimalSeparator = '.', thousandSeparator = ',', allowNegative = false, prefix = '', suffix = ''){\r\n    // provide some default values and arg validation.\r\n    if (precision < 0) { precision = 0; } // precision cannot be negative\r\n    if (precision > 20) { precision = 20; } // precision cannot be greater than 20\r\n    \r\n    if (value === null || value===undefined) {\r\n          return {\r\n              value: 0,\r\n              maskedValue: ''\r\n          };\r\n     }\r\n  \r\n    value = String(value); //if the given value is a Number, let's convert into String to manipulate that\r\n\r\n    if (value.length == 0) {\r\n        return {\r\n            value: 0,\r\n            maskedValue: ''\r\n        };\r\n    }\r\n\r\n\r\n    // extract digits. if no digits, fill in a zero.\r\n    let digits = value.match(/\\d/g) || ['0'];\r\n    \r\n    let numberIsNegative = false;\r\n    if (allowNegative) {\r\n        let negativeSignCount = (value.match(/-/g) || []).length;\r\n        // number will be negative if we have an odd number of \"-\"\r\n        // ideally, we should only ever have 0, 1 or 2 (positive number, making a number negative\r\n        // and making a negative number positive, respectively)\r\n        numberIsNegative = negativeSignCount % 2 === 1;\r\n        \r\n        // if every digit in the array is '0', then the number should never be negative\r\n        let allDigitsAreZero = true;\r\n        for (let idx=0; idx < digits.length; idx += 1) {\r\n            if(digits[idx] !== '0') {\r\n                allDigitsAreZero = false;\r\n                break;\r\n            }\r\n        }\r\n        if (allDigitsAreZero) {\r\n            numberIsNegative = false;\r\n        }\r\n    }\r\n\r\n    // zero-pad a input\r\n    while (digits.length <= precision) { digits.unshift('0'); }\r\n\r\n    if (precision > 0) {\r\n        // add the decimal separator\r\n        digits.splice(digits.length - precision, 0, \".\");\r\n    }\r\n\r\n    // clean up extraneous digits like leading zeros.\r\n    digits = Number(digits.join('')).toFixed(precision).split('');\r\n    let raw = Number(digits.join(''));\r\n\r\n    let decimalpos = digits.length - precision - 1;  // -1 needed to position the decimal separator before the digits.\r\n    if (precision > 0) {\r\n        // set the final decimal separator\r\n        digits[decimalpos] = decimalSeparator;\r\n    } else {\r\n        // when precision is 0, there is no decimal separator.\r\n        decimalpos = digits.length;\r\n    }\r\n\r\n    // add in any thousand separators\r\n    for (let x=decimalpos - 3; x > 0; x = x - 3) {\r\n        digits.splice(x, 0, thousandSeparator);\r\n    }\r\n\r\n    // if we have a prefix or suffix, add them in.\r\n    if (prefix.length > 0) { digits.unshift(prefix); }\r\n    if (suffix.length > 0) { digits.push(suffix); }\r\n\r\n    // if the number is negative, insert a \"-\" to\r\n    // the front of the array and negate the raw value\r\n    if (allowNegative && numberIsNegative) {\r\n        digits.unshift('-');\r\n        raw = -raw;\r\n    }\r\n\r\n    return {\r\n        value: raw,\r\n        maskedValue: digits.join('').trim()\r\n    };\r\n}\r\n","import './object-assign-polyfill';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component }  from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport mask from './mask.js'\r\n\r\n// IE* parseFloat polyfill\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat#Polyfill\r\nNumber.parseFloat = parseFloat;\r\n\r\nclass CurrencyInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.prepareProps = this.prepareProps.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n        this.setSelectionRange = this.setSelectionRange.bind(this);\r\n        this.state = this.prepareProps(this.props);\r\n\r\n        this.inputSelectionStart = 1;\r\n        this.inputSelectionEnd = 1;\r\n    }\r\n\r\n\r\n    /**\r\n     * Exposes the current masked value.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getMaskedValue() {\r\n        return this.state.maskedValue;\r\n    }\r\n\r\n\r\n    /**\r\n     * General function used to cleanup and define the final props used for rendering\r\n     * @returns {{ maskedValue: {String}, value: {Number}, customProps: {Object} }}\r\n     */\r\n    prepareProps(props) {\r\n        let customProps = {...props}; // babeljs converts to Object.assign, then polyfills.\r\n        delete customProps.onChange;\r\n        delete customProps.onChangeEvent;\r\n        delete customProps.value;\r\n        delete customProps.decimalSeparator;\r\n        delete customProps.thousandSeparator;\r\n        delete customProps.precision;\r\n        delete customProps.inputType;\r\n        delete customProps.allowNegative;\r\n        delete customProps.allowEmpty;\r\n        delete customProps.prefix;\r\n        delete customProps.suffix;\r\n        delete customProps.selectAllOnFocus;\r\n        delete customProps.autoFocus;\r\n\r\n        let initialValue = props.value;\r\n        if (initialValue === null) {\r\n            initialValue = props.allowEmpty? null : '';\r\n        }else{\r\n\r\n            if (typeof initialValue == 'string') {\r\n                // Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\"\r\n                // Now they have two problems.\r\n\r\n                // Strip out thousand separators, prefix, and suffix, etc.\r\n                if (props.thousandSeparator === \".\"){\r\n                    // special handle the . thousand separator\r\n                    initialValue = initialValue.replace(/\\./g, '');\r\n                }\r\n\r\n                if (props.decimalSeparator != \".\"){\r\n                    // fix the decimal separator\r\n                    initialValue = initialValue.replace(new RegExp(props.decimalSeparator, 'g'), '.');\r\n                }\r\n\r\n                //Strip out anything that is not a digit, -, or decimal separator\r\n                initialValue = initialValue.replace(/[^0-9-.]/g, '');\r\n\r\n                // now we can parse.\r\n                initialValue = Number.parseFloat(initialValue);\r\n            }\r\n            initialValue = Number(initialValue).toLocaleString(undefined, {\r\n                style                : 'decimal',\r\n                minimumFractionDigits: props.precision,\r\n                maximumFractionDigits: props.precision\r\n            })\r\n\r\n        }\r\n\r\n        const { maskedValue, value } = mask(\r\n            initialValue,\r\n            props.precision,\r\n            props.decimalSeparator,\r\n            props.thousandSeparator,\r\n            props.allowNegative,\r\n            props.prefix,\r\n            props.suffix\r\n        );\r\n\r\n        return { maskedValue, value, customProps };\r\n    }\r\n\r\n\r\n    /**\r\n     * Component lifecycle function.\r\n     * Invoked when a component is receiving new props. This method is not called for the initial render.\r\n     *\r\n     * @param nextProps\r\n     * @see https://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\r\n     */\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState(this.prepareProps(nextProps));\r\n    }\r\n\r\n\r\n    /**\r\n     * Component lifecycle function.\r\n     * @returns {XML}\r\n     * @see https://facebook.github.io/react/docs/react-component.html#componentdidmount\r\n     */\r\n    componentDidMount(){\r\n        let node = ReactDOM.findDOMNode(this.theInput);\r\n        let selectionStart, selectionEnd;\r\n\r\n        if (this.props.autoFocus) {\r\n            this.theInput.focus();\r\n            selectionEnd = this.state.maskedValue.length - this.props.suffix.length;\r\n            selectionStart = selectionEnd;\r\n        } else {\r\n            selectionEnd = Math.min(node.selectionEnd, this.theInput.value.length - this.props.suffix.length);\r\n            selectionStart = Math.min(node.selectionStart, selectionEnd);\r\n        }\r\n\r\n        this.setSelectionRange(node, selectionStart, selectionEnd);\r\n    }\r\n\r\n\r\n    /**\r\n     * Component lifecycle function\r\n     * @returns {XML}\r\n     * @see https://facebook.github.io/react/docs/react-component.html#componentwillupdate\r\n     */\r\n    componentWillUpdate() {\r\n        let node = ReactDOM.findDOMNode(this.theInput);\r\n        this.inputSelectionStart = node.selectionStart;\r\n        this.inputSelectionEnd = node.selectionEnd;\r\n    }\r\n\r\n\r\n    /**\r\n     * Component lifecycle function.\r\n     * @returns {XML}\r\n     * @see https://facebook.github.io/react/docs/react-component.html#componentdidupdate\r\n     */\r\n    componentDidUpdate(prevProps, prevState){\r\n        const { decimalSeparator } = this.props;\r\n        let node = ReactDOM.findDOMNode(this.theInput);\r\n        let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\r\n        let minPos = this.props.prefix.length + (isNegative ? 1 : 0);\r\n        let selectionEnd = Math.max(minPos, Math.min(this.inputSelectionEnd, this.theInput.value.length - this.props.suffix.length));\r\n        let selectionStart = Math.max(minPos, Math.min(this.inputSelectionEnd, selectionEnd));\r\n\r\n        let regexEscapeRegex = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\r\n        let separatorsRegex = new RegExp(decimalSeparator.replace(regexEscapeRegex, '\\\\$&') + '|' + this.props.thousandSeparator.replace(regexEscapeRegex, '\\\\$&'), 'g');\r\n        let currSeparatorCount = (this.state.maskedValue.match(separatorsRegex) || []).length;\r\n        let prevSeparatorCount = (prevState.maskedValue.match(separatorsRegex) || []).length;\r\n        let adjustment = Math.max(currSeparatorCount - prevSeparatorCount, 0);\r\n\r\n        selectionEnd = selectionEnd + adjustment;\r\n        selectionStart = selectionStart + adjustment;\r\n\r\n        const precision = Number(this.props.precision);\r\n\r\n        let baselength = this.props.suffix.length\r\n            + this.props.prefix.length\r\n            + (precision > 0 ? decimalSeparator.length : 0) // if precision is 0 there will be no decimal part\r\n            + precision\r\n            + 1; // This is to account for the default '0' value that comes before the decimal separator\r\n\r\n        if (this.state.maskedValue.length == baselength){\r\n            // if we are already at base length, position the cursor at the end.\r\n            selectionEnd = this.theInput.value.length - this.props.suffix.length;\r\n            selectionStart = selectionEnd;\r\n        }\r\n\r\n        this.setSelectionRange(node, selectionStart, selectionEnd);\r\n        this.inputSelectionStart = selectionStart;\r\n        this.inputSelectionEnd = selectionEnd;\r\n    }\r\n\r\n    /**\r\n     * Set selection range only if input is in focused state\r\n     * @param node DOMElement\r\n     * @param start number\r\n     * @param end number\r\n     */\r\n    setSelectionRange(node, start, end) {\r\n      if (document.activeElement === node) {\r\n        node.setSelectionRange(start, end);\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * onChange Event Handler\r\n     * @param event\r\n     */\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        let { maskedValue, value } = mask(\r\n            event.target.value,\r\n            this.props.precision,\r\n            this.props.decimalSeparator,\r\n            this.props.thousandSeparator,\r\n            this.props.allowNegative,\r\n            this.props.prefix,\r\n            this.props.suffix\r\n        );\r\n\r\n        event.persist();  // fixes issue #23\r\n\r\n        this.setState({ maskedValue, value }, () => {\r\n            this.props.onChange(maskedValue, value, event);\r\n            this.props.onChangeEvent(event, maskedValue, value);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * onFocus Event Handler\r\n     * @param event\r\n     */\r\n    handleFocus(event) {\r\n        if (!this.theInput) return;\r\n\r\n        //Whenever we receive focus check to see if the position is before the suffix, if not, move it.\r\n        let selectionEnd = this.theInput.value.length - this.props.suffix.length;\r\n        let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\r\n        let selectionStart = this.props.prefix.length + (isNegative ? 1 : 0);\r\n        this.props.selectAllOnFocus && event.target.setSelectionRange(selectionStart, selectionEnd);\r\n        this.inputSelectionStart = selectionStart;\r\n        this.inputSelectionEnd = selectionEnd;\r\n    }\r\n\r\n\r\n    handleBlur(event) {\r\n        this.inputSelectionStart = 0;\r\n        this.inputSelectionEnd = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Component lifecycle function.\r\n     * @returns {XML}\r\n     * @see https://facebook.github.io/react/docs/component-specs.html#render\r\n     */\r\n    render() {\r\n        return (\r\n            <input\r\n                ref={(input) => { this.theInput = input; }}\r\n                type={this.props.inputType}\r\n                value={this.state.maskedValue}\r\n                onChange={this.handleChange}\r\n                onFocus={this.handleFocus}\r\n                onMouseUp={this.handleFocus}\r\n                {...this.state.customProps}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Prop validation.\r\n * @see https://facebook.github.io/react/docs/component-specs.html#proptypes\r\n */\r\n\r\nCurrencyInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    decimalSeparator: PropTypes.string,\r\n    thousandSeparator: PropTypes.string,\r\n    precision: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    inputType: PropTypes.string,\r\n    allowNegative: PropTypes.bool,\r\n    allowEmpty: PropTypes.bool,\r\n    prefix: PropTypes.string,\r\n    suffix: PropTypes.string,\r\n    selectAllOnFocus: PropTypes.bool\r\n};\r\n\r\n\r\nCurrencyInput.defaultProps = {\r\n    onChange: function(maskValue, value, event) {/*no-op*/},\r\n    onChangeEvent: function(event, maskValue, value) {/*no-op*/},\r\n    autoFocus: false,\r\n    value: '0',\r\n    decimalSeparator: '.',\r\n    thousandSeparator: ',',\r\n    precision: '2',\r\n    inputType: 'text',\r\n    allowNegative: false,\r\n    prefix: '',\r\n    suffix: '',\r\n    selectAllOnFocus: false\r\n};\r\n\r\n\r\nexport default CurrencyInput\r\n"],"names":["arguments","let","super","const","this","React","Component"],"mappings":"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"}