{"version":3,"file":"react-currency-input.es.js","sources":["../src/object-assign-polyfill.js","../src/mask.js","../src/index.js"],"sourcesContent":["Object.assign = Object.assign ||\n  function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n","\nexport default function mask(value, precision = 2, decimalSeparator = '.', thousandSeparator = ',', allowNegative = false, prefix = '', suffix = ''){\n    // provide some default values and arg validation.\n    if (precision < 0) { precision = 0; } // precision cannot be negative\n    if (precision > 20) { precision = 20; } // precision cannot be greater than 20\n    \n    if (value === null || value===undefined) {\n          return {\n              value: 0,\n              maskedValue: ''\n          };\n     }\n  \n    value = String(value); //if the given value is a Number, let's convert into String to manipulate that\n\n    if (value.length == 0) {\n        return {\n            value: 0,\n            maskedValue: ''\n        };\n    }\n\n\n    // extract digits. if no digits, fill in a zero.\n    let digits = value.match(/\\d/g) || ['0'];\n    \n    let numberIsNegative = false;\n    if (allowNegative) {\n        let negativeSignCount = (value.match(/-/g) || []).length;\n        // number will be negative if we have an odd number of \"-\"\n        // ideally, we should only ever have 0, 1 or 2 (positive number, making a number negative\n        // and making a negative number positive, respectively)\n        numberIsNegative = negativeSignCount % 2 === 1;\n        \n        // if every digit in the array is '0', then the number should never be negative\n        let allDigitsAreZero = true;\n        for (let idx=0; idx < digits.length; idx += 1) {\n            if(digits[idx] !== '0') {\n                allDigitsAreZero = false;\n                break;\n            }\n        }\n        if (allDigitsAreZero) {\n            numberIsNegative = false;\n        }\n    }\n\n    // zero-pad a input\n    while (digits.length <= precision) { digits.unshift('0'); }\n\n    if (precision > 0) {\n        // add the decimal separator\n        digits.splice(digits.length - precision, 0, \".\");\n    }\n\n    // clean up extraneous digits like leading zeros.\n    digits = Number(digits.join('')).toFixed(precision).split('');\n    let raw = Number(digits.join(''));\n\n    let decimalpos = digits.length - precision - 1;  // -1 needed to position the decimal separator before the digits.\n    if (precision > 0) {\n        // set the final decimal separator\n        digits[decimalpos] = decimalSeparator;\n    } else {\n        // when precision is 0, there is no decimal separator.\n        decimalpos = digits.length;\n    }\n\n    // add in any thousand separators\n    for (let x=decimalpos - 3; x > 0; x = x - 3) {\n        digits.splice(x, 0, thousandSeparator);\n    }\n\n    // if we have a prefix or suffix, add them in.\n    if (prefix.length > 0) { digits.unshift(prefix); }\n    if (suffix.length > 0) { digits.push(suffix); }\n\n    // if the number is negative, insert a \"-\" to\n    // the front of the array and negate the raw value\n    if (allowNegative && numberIsNegative) {\n        digits.unshift('-');\n        raw = -raw;\n    }\n\n    return {\n        value: raw,\n        maskedValue: digits.join('').trim()\n    };\n}\n","import './object-assign-polyfill';\n\nimport PropTypes from 'prop-types';\nimport React, { Component }  from 'react'\nimport ReactDOM from 'react-dom'\nimport mask from './mask.js'\n\n// IE* parseFloat polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat#Polyfill\nNumber.parseFloat = parseFloat;\n\nclass CurrencyInput extends Component {\n    constructor(props) {\n        super(props);\n        this.prepareProps = this.prepareProps.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.setSelectionRange = this.setSelectionRange.bind(this);\n        this.state = this.prepareProps(this.props);\n\n        this.inputSelectionStart = 1;\n        this.inputSelectionEnd = 1;\n    }\n\n\n    /**\n     * Exposes the current masked value.\n     *\n     * @returns {String}\n     */\n    getMaskedValue() {\n        return this.state.maskedValue;\n    }\n\n\n    /**\n     * General function used to cleanup and define the final props used for rendering\n     * @returns {{ maskedValue: {String}, value: {Number}, customProps: {Object} }}\n     */\n    prepareProps(props) {\n        let customProps = {...props}; // babeljs converts to Object.assign, then polyfills.\n        delete customProps.onChange;\n        delete customProps.onChangeEvent;\n        delete customProps.value;\n        delete customProps.decimalSeparator;\n        delete customProps.thousandSeparator;\n        delete customProps.precision;\n        delete customProps.inputType;\n        delete customProps.allowNegative;\n        delete customProps.allowEmpty;\n        delete customProps.prefix;\n        delete customProps.suffix;\n        delete customProps.selectAllOnFocus;\n        delete customProps.autoFocus;\n\n        let initialValue = props.value;\n        if (initialValue === null) {\n            initialValue = props.allowEmpty? null : '';\n        }else{\n\n            if (typeof initialValue == 'string') {\n                // Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\"\n                // Now they have two problems.\n\n                // Strip out thousand separators, prefix, and suffix, etc.\n                if (props.thousandSeparator === \".\"){\n                    // special handle the . thousand separator\n                    initialValue = initialValue.replace(/\\./g, '');\n                }\n\n                if (props.decimalSeparator != \".\"){\n                    // fix the decimal separator\n                    initialValue = initialValue.replace(new RegExp(props.decimalSeparator, 'g'), '.');\n                }\n\n                //Strip out anything that is not a digit, -, or decimal separator\n                initialValue = initialValue.replace(/[^0-9-.]/g, '');\n\n                // now we can parse.\n                initialValue = Number.parseFloat(initialValue);\n            }\n            initialValue = Number(initialValue).toLocaleString(undefined, {\n                style                : 'decimal',\n                minimumFractionDigits: props.precision,\n                maximumFractionDigits: props.precision\n            })\n\n        }\n\n        const { maskedValue, value } = mask(\n            initialValue,\n            props.precision,\n            props.decimalSeparator,\n            props.thousandSeparator,\n            props.allowNegative,\n            props.prefix,\n            props.suffix\n        );\n\n        return { maskedValue, value, customProps };\n    }\n\n\n    /**\n     * Component lifecycle function.\n     * Invoked when a component is receiving new props. This method is not called for the initial render.\n     *\n     * @param nextProps\n     * @see https://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\n     */\n    componentWillReceiveProps(nextProps) {\n        this.setState(this.prepareProps(nextProps));\n    }\n\n\n    /**\n     * Component lifecycle function.\n     * @returns {XML}\n     * @see https://facebook.github.io/react/docs/react-component.html#componentdidmount\n     */\n    componentDidMount(){\n        let node = ReactDOM.findDOMNode(this.theInput);\n        let selectionStart, selectionEnd;\n\n        if (this.props.autoFocus) {\n            this.theInput.focus();\n            selectionEnd = this.state.maskedValue.length - this.props.suffix.length;\n            selectionStart = selectionEnd;\n        } else {\n            selectionEnd = Math.min(node.selectionEnd, this.theInput.value.length - this.props.suffix.length);\n            selectionStart = Math.min(node.selectionStart, selectionEnd);\n        }\n\n        // this.setSelectionRange(node, selectionStart, selectionEnd);\n    }\n\n\n    /**\n     * Component lifecycle function\n     * @returns {XML}\n     * @see https://facebook.github.io/react/docs/react-component.html#componentwillupdate\n     */\n    componentWillUpdate() {\n        let node = ReactDOM.findDOMNode(this.theInput);\n        this.inputSelectionStart = node.selectionStart;\n        this.inputSelectionEnd = node.selectionEnd;\n    }\n\n\n    /**\n     * Component lifecycle function.\n     * @returns {XML}\n     * @see https://facebook.github.io/react/docs/react-component.html#componentdidupdate\n     */\n    componentDidUpdate(prevProps, prevState){\n        const { decimalSeparator } = this.props;\n        let node = ReactDOM.findDOMNode(this.theInput);\n        let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\n        let minPos = this.props.prefix.length + (isNegative ? 1 : 0);\n        let selectionEnd = Math.max(minPos, Math.min(this.inputSelectionEnd, this.theInput.value.length - this.props.suffix.length));\n        let selectionStart = Math.max(minPos, Math.min(this.inputSelectionEnd, selectionEnd));\n\n        let regexEscapeRegex = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n        let separatorsRegex = new RegExp(decimalSeparator.replace(regexEscapeRegex, '\\\\$&') + '|' + this.props.thousandSeparator.replace(regexEscapeRegex, '\\\\$&'), 'g');\n        let currSeparatorCount = (this.state.maskedValue.match(separatorsRegex) || []).length;\n        let prevSeparatorCount = (prevState.maskedValue.match(separatorsRegex) || []).length;\n        let adjustment = Math.max(currSeparatorCount - prevSeparatorCount, 0);\n\n        selectionEnd = selectionEnd + adjustment;\n        selectionStart = selectionStart + adjustment;\n\n        const precision = Number(this.props.precision);\n\n        let baselength = this.props.suffix.length\n            + this.props.prefix.length\n            + (precision > 0 ? decimalSeparator.length : 0) // if precision is 0 there will be no decimal part\n            + precision\n            + 1; // This is to account for the default '0' value that comes before the decimal separator\n\n        if (this.state.maskedValue.length == baselength){\n            // if we are already at base length, position the cursor at the end.\n            selectionEnd = this.theInput.value.length - this.props.suffix.length;\n            selectionStart = selectionEnd;\n        }\n\n        // this.setSelectionRange(node, selectionStart, selectionEnd);\n        this.inputSelectionStart = selectionStart;\n        this.inputSelectionEnd = selectionEnd;\n    }\n\n    /**\n     * Set selection range only if input is in focused state\n     * @param node DOMElement\n     * @param start number\n     * @param end number\n     */\n    setSelectionRange(node, start, end) {\n      if (document.activeElement === node) {\n        node.setSelectionRange(start, end);\n      }\n    }\n\n\n    /**\n     * onChange Event Handler\n     * @param event\n     */\n    handleChange(event) {\n        event.preventDefault();\n        let { maskedValue, value } = mask(\n            event.target.value,\n            this.props.precision,\n            this.props.decimalSeparator,\n            this.props.thousandSeparator,\n            this.props.allowNegative,\n            this.props.prefix,\n            this.props.suffix\n        );\n\n        event.persist();  // fixes issue #23\n\n        this.setState({ maskedValue, value }, () => {\n            this.props.onChange(maskedValue, value, event);\n            this.props.onChangeEvent(event, maskedValue, value);\n        });\n    }\n\n\n    /**\n     * onFocus Event Handler\n     * @param event\n     */\n    handleFocus(event) {\n        if (!this.theInput) return;\n\n        //Whenever we receive focus check to see if the position is before the suffix, if not, move it.\n        let selectionEnd = this.theInput.value.length - this.props.suffix.length;\n        let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\n        let selectionStart = this.props.prefix.length + (isNegative ? 1 : 0);\n        this.props.selectAllOnFocus && event.target.setSelectionRange(selectionStart, selectionEnd);\n        this.inputSelectionStart = selectionStart;\n        this.inputSelectionEnd = selectionEnd;\n    }\n\n\n    handleBlur(event) {\n        this.inputSelectionStart = 0;\n        this.inputSelectionEnd = 0;\n    }\n\n\n    /**\n     * Component lifecycle function.\n     * @returns {XML}\n     * @see https://facebook.github.io/react/docs/component-specs.html#render\n     */\n    render() {\n        return (\n            <input\n                ref={(input) => { this.theInput = input; }}\n                type={this.props.inputType}\n                value={this.state.maskedValue}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                onMouseUp={this.handleFocus}\n                {...this.state.customProps}\n            />\n        )\n    }\n}\n\n\n\n/**\n * Prop validation.\n * @see https://facebook.github.io/react/docs/component-specs.html#proptypes\n */\n\nCurrencyInput.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    decimalSeparator: PropTypes.string,\n    thousandSeparator: PropTypes.string,\n    precision: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    inputType: PropTypes.string,\n    allowNegative: PropTypes.bool,\n    allowEmpty: PropTypes.bool,\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    selectAllOnFocus: PropTypes.bool\n};\n\n\nCurrencyInput.defaultProps = {\n    onChange: function(maskValue, value, event) {/*no-op*/},\n    onChangeEvent: function(event, maskValue, value) {/*no-op*/},\n    autoFocus: false,\n    value: '0',\n    decimalSeparator: '.',\n    thousandSeparator: ',',\n    precision: '2',\n    inputType: 'text',\n    allowNegative: false,\n    prefix: '',\n    suffix: '',\n    selectAllOnFocus: false\n};\n\n\nexport default CurrencyInput\n"],"names":["arguments","let","super","const","this"],"mappings":"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"}